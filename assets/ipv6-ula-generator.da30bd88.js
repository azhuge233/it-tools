import{_ as p}from"./c-input-text.1faff010.js";import{c as _}from"./index.d87f09eb.js";import{_ as f}from"./InputCopyable.eac6f423.js";import{m as b}from"./macAddress.f4289506.js";import{d as g,A as v,e as h,k as r,l as u,w as x,n as o,B as y,F as k,r as A,J as w,o as n,m as V,x as C}from"./index.2e6b7445.js";import{_ as T}from"./Alert.6e846e50.js";import"./random.613c1dc4.js";import"./validation.89ce9e2c.js";import"./content-copy.43681fe1.js";const B={key:0},D=g({__name:"ipv6-ula-generator",setup(F){const t=v("20:37:06:12:34:56"),m=h(()=>{const i=new Date().getTime(),e=_.exports.SHA1(i+t.value).toString().substring(30),a="fd"+e.substring(0,2)+":"+e.substring(2,6)+":"+e.substring(6);return[{label:"IPv6 ULA:",value:`${a}::/48`},{label:"First routable block:",value:`${a}:0::/64`},{label:"Last routable block:",value:`${a}:ffff::/64`}]}),l=b(t);return(i,e)=>{const a=T,d=p;return n(),r("div",null,[u(a,{title:"Info",type:"info"},{default:x(()=>[V(" This tool uses the first method suggested by IETF using the current timestamp plus the mac address, sha1 hashed, and the lower 40 bits to generate your random ULA. ")]),_:1}),u(d,{value:o(t),"onUpdate:value":e[0]||(e[0]=s=>y(t)?t.value=s:null),placeholder:"Type a MAC address",clearable:"",label:"MAC address:","raw-text":"","my-8":"",validation:o(l)},null,8,["value","validation"]),o(l).isValid?(n(),r("div",B,[(n(!0),r(k,null,A(o(m),({label:s,value:c})=>(n(),C(f,{key:s,value:c,label:s,"label-width":"160px","label-align":"right","label-position":"left",readonly:"","mb-2":""},null,8,["value","label"]))),128))])):w("",!0)])}}});export{D as default};
